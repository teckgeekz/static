{"pageProps":{"globalData":{"name":"FA Blog","blogTitle":"FA Blog","footerText":"All rights reserved."},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    h6: \"h6\",\n    hr: \"hr\",\n    strong: \"strong\",\n    em: \"em\",\n    del: \"del\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    ol: \"ol\",\n    pre: \"pre\",\n    span: \"span\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Something has always existed. According to physics, there can never be true physical nothingnessâ€”though there can be times when existence resembles nothing, such as a vacuum (the state of minimum possible energy) (Phys.org). Creating a space where there are no quantum fluctuations requires an enormous amount of energy, and there would be a remnant of that energy in that space afterwards if the fluctuations were flushed out, plus an unstable environment (1veritasium). Even on computers, deleted data is not actually tossed away, by rather written over.\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"h1 Heading\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"h2 Heading\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"h3 Heading\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"h4 Heading\"\n    }), \"\\n\", _jsx(_components.h5, {\n      children: \"h5 Heading\"\n    }), \"\\n\", _jsx(_components.h6, {\n      children: \"h6 Heading\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Horizontal Rules\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      children: \"Emphasis\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"This is bold text\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"This is bold text\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"This is italic text\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"This is italic text\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.del, {\n        children: \"Strikethrough\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Blockquotes\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Blockquotes can also be nested...\"\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"...by using additional greater-than signs right next to each other...\"\n        }), \"\\n\", _jsxs(_components.blockquote, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"...or with spaces between arrows.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Lists\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Unordered\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Create a list by starting a line with \", _jsx(_components.code, {\n          children: \"+\"\n        }), \", \", _jsx(_components.code, {\n          children: \"-\"\n        }), \", or \", _jsx(_components.code, {\n          children: \"*\"\n        })]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Sub-lists are made by indenting 2 spaces:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"Marker character change forces new list start:\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Ac tristique libero volutpat at\"\n              }), \"\\n\"]\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Facilisis in pretium nisl aliquet\"\n              }), \"\\n\"]\n            }), \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Nulla volutpat aliquam velit\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Very easy!\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ordered\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Lorem ipsum dolor sit amet\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Consectetur adipiscing elit\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Integer molestie lorem at massa\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"You can use sequential numbers...\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [\"...or keep all the numbers as \", _jsx(_components.code, {\n            children: \"1.\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Start numbering with offset:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"57\",\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"foo\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"bar\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Code\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Inline \", _jsx(_components.code, {\n        children: \"code\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Indented code\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"// Some comments\\nline 1 of code\\nline 2 of code\\nline 3 of code\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Block code \\\"fences\\\"\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Sample text here...\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Syntax highlighting\"\n    }), \"\\n\", _jsx(_components.pre, {\n      className: \"language-js\",\n      children: _jsxs(_components.code, {\n        className: \"language-js\",\n        children: [_jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"var\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token function-variable function\",\n          children: \"foo\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"=\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token keyword\",\n          children: \"function\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token parameter\",\n          children: \"bar\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), \" \", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"{\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"token keyword control-flow\",\n          children: \"return\"\n        }), \" bar\", _jsx(_components.span, {\n          className: \"token operator\",\n          children: \"++\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\\n\", _jsx(_components.span, {\n          className: \"token console class-name\",\n          children: \"console\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \".\"\n        }), _jsx(_components.span, {\n          className: \"token method function property-access\",\n          children: \"log\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token function\",\n          children: \"foo\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \"(\"\n        }), _jsx(_components.span, {\n          className: \"token number\",\n          children: \"5\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \")\"\n        }), _jsx(_components.span, {\n          className: \"token punctuation\",\n          children: \";\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Tables\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"data\"\n          }), _jsx(_components.td, {\n            children: \"path to data files to supply the data that will be passed into templates.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"engine\"\n          }), _jsx(_components.td, {\n            children: \"engine to be used for processing templates. Handlebars is the default.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            children: \"ext\"\n          }), _jsx(_components.td, {\n            children: \"extension to be used for dest files.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Right aligned columns\"\n    }), \"\\n\", _jsxs(_components.table, {\n      children: [_jsx(_components.thead, {\n        children: _jsxs(_components.tr, {\n          children: [_jsx(_components.th, {\n            align: \"right\",\n            children: \"Option\"\n          }), _jsx(_components.th, {\n            align: \"right\",\n            children: \"Description\"\n          })]\n        })\n      }), _jsxs(_components.tbody, {\n        children: [_jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"right\",\n            children: \"data\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"path to data files to supply the data that will be passed into templates.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"right\",\n            children: \"engine\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"engine to be used for processing templates. Handlebars is the default.\"\n          })]\n        }), _jsxs(_components.tr, {\n          children: [_jsx(_components.td, {\n            align: \"right\",\n            children: \"ext\"\n          }), _jsx(_components.td, {\n            align: \"right\",\n            children: \"extension to be used for dest files.\"\n          })]\n        })]\n      })]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Links\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://dev.nodeca.com\",\n        children: \"link text\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"http://nodeca.github.io/pica/demo/\",\n        title: \"title text!\",\n        children: \"link with title\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Autoconverted link \", _jsx(_components.a, {\n        href: \"https://github.com/nodeca/pica\",\n        children: \"https://github.com/nodeca/pica\"\n      }), \" (enable linkify to see)\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"How to create SVG-ready icon symbols in Sketch PART 2","description":"Something has always existed. According to physics, there can never be true physical nothingnessâ€”though there can be times when existence resembles nothing, such as a vacuum (the state of minimum possible energy) (Phys.org). Creating a space where there are no quantum.","date":"May 8 2021"}},"frontMatter":{"title":"How to create SVG-ready icon symbols in Sketch PART 2","description":"Something has always existed. According to physics, there can never be true physical nothingnessâ€”though there can be times when existence resembles nothing, such as a vacuum (the state of minimum possible energy) (Phys.org). Creating a space where there are no quantum.","date":"May 8 2021"},"prevPost":{"title":"Design critiques at Figma","slug":"test-post"},"nextPost":{"title":"Mental models for designers","slug":"one-more-post"}},"__N_SSG":true}